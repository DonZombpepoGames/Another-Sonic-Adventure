// ========================
// Aliases
// ========================

private alias 0 : BREAKBLOCK_SOLID
public alias 1 : BREAKBLOCK_DEBRIS1
private alias 2 : BREAKBLOCK_DEBRIS2
private alias 3 : BREAKBLOCK_DEBRIS3
private alias 4 : BREAKBLOCK_DEBRIS4

// Player Aliases
private alias object.yvel : player.yvel
private alias object.gravity : player.gravity
private alias object.animation : player.animation
private alias object.value16 : player.isSidekick
private alias object.value19 : player.badnikBonus

// Global Variable ID Aliases
private alias 22 : GLOBAL_PLAYERSCORE


// ========================
// Function Declarations
// ========================



// ========================
// Function Definitions
// ========================



// ========================
// Events
// ========================

// ========================
// Tables
// ========================

event ObjectUpdate

	if object.propertyValue >= 0
		object.animationTimer++
		if object.animationTimer >= 3
			object.animationTimer = 0
			object.frame++
			if object.frame == 4
				object.frame = 1
			end if
		end if
	end if
	
	switch object.state
	case BREAKBLOCK_SOLID
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			if player[currentPlayer].animation == ANI_JUMPING
				BoxCollisionTest(C_SOLID, object.entityPos, -16, -16, 16, 16, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
				if checkResult == COL_TOP
					player[currentPlayer].yvel = -0x30000
					player[currentPlayer].gravity = GRAVITY_AIR

					// Create block fragments
					CreateTempObject(TypeName[Break Rock], 1, object.xpos, object.ypos)
					object[tempObjectPos].frame = 1
					object[tempObjectPos].ixpos -= 8
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = -0x25000
					object[tempObjectPos].yvel = -0x25000
					object[tempObjectPos].state = BREAKBLOCK_DEBRIS1
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 1, object.xpos, object.ypos)
					object[tempObjectPos].frame = 1
					object[tempObjectPos].ixpos += 8
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = 0x25000
					object[tempObjectPos].yvel = -0x25000
					object[tempObjectPos].state = BREAKBLOCK_DEBRIS2
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 1, object.xpos, object.ypos)
					object[tempObjectPos].frame = 1
					object[tempObjectPos].ixpos -= 8
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = -0x15000
					object[tempObjectPos].yvel = -0x30000
					object[tempObjectPos].state = BREAKBLOCK_DEBRIS3
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 1, object.xpos, object.ypos)
					object[tempObjectPos].frame = 1
					object[tempObjectPos].ixpos += 8
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = 0x15000
					object[tempObjectPos].yvel = -0x30000
					object[tempObjectPos].state = BREAKBLOCK_DEBRIS4
					object[tempObjectPos].drawOrder = 5

					object.type = TypeName[Blank Object]					

					PlaySfx(SfxName[Block Break], false)
				end if
			else
				BoxCollisionTest(C_SOLID, object.entityPos, -22, -16, 22, 16, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			end if
		next
		break
	
		
	case BREAKBLOCK_DEBRIS1
	case BREAKBLOCK_DEBRIS2
	case BREAKBLOCK_DEBRIS3
	case BREAKBLOCK_DEBRIS4
		// Block fragment - just update movement and unload when no longer needed
		object.xpos += object.xvel
		object.ypos += object.yvel
		object.yvel += 0x3800
		if object.outOfBounds == true
			object.type = TypeName[Blank Object]
		end if
		break

	end switch
end event


event ObjectDraw
if object.propertyValue == 0
	DrawSprite(0)
else
	DrawSprite(object.frame)
end if
end event


event ObjectStartup	
	if stage.actnum == 1
		LoadSpriteSheet("AIZ/Objects2.gif")
	else 
		LoadSpriteSheet("AIZ/Objects3.gif")
	end if

	SpriteFrame(-23, -15, 46, 31, 465, 33)

	SpriteFrame(-8, -8, 23, 22, 321, 233)
	SpriteFrame(-8, -8, 22, 23, 345, 232)
	SpriteFrame(-8, -8, 23, 22, 368, 233)
	SpriteFrame(-8, -8, 22, 23, 392, 232)

end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("CPZ/Objects.gif")
	SpriteFrame(-16, -16, 32, 32, 165, 223)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
