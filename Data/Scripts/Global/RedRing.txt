// ----------------------------------
// RSDK Project: Another Sonic Adventure
// Script Description: Red Ring Object
// Script Author: Zombstech
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value1 : object.targetPlayer

private alias 0 : RING_IDLE
private alias 1 : RING_ATTRACTED

// Player Aliases
private alias object.state   : player.state
private alias object.xpos    : player.xpos
private alias object.ypos    : player.ypos
private alias object.value0  : player.rings
private alias object.value16 : player.isSidekick
private alias object.value18 : player.currentPlane
private alias object.value37 : player.shield

private alias 4 : SHIELD_LIGHTNING

// Game Modes
private alias 2 : MODE_TIMEATTACK

// Music Events
private alias 25 : SLOT_MUSICEVENT_CHANGE

private alias  2 : MUSICEVENT_TRANSITION
//this script uses the normal ring script as a base, so expect some unused things here because this ring don't give you lives, and it is not attracted by lightning shields (rayoescudo, o escudo sonic 2006 para los panas)

// ========================
// Function Declarations
// ========================

reserve function Ring_DebugDraw
reserve function Ring_DebugSpawn

private function Ring_DebugDraw
	DrawSprite(0)
end function


private function Ring_DebugSpawn
	CreateTempObject(TypeName[Ring], 0, object.xpos, object.ypos)
	object[tempObjectPos].drawOrder = 4
end function


// ========================
// Events
// ========================

event ObjectUpdate
	// Check interaction with players
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)

		// Make sure that the player isn't supposed to ignore rings right now
		CheckEqual(player[0].state, Player_State_Hurt)
		temp0 = checkResult
		CheckEqual(player[currentPlayer].state, Player_State_Hurt)
		temp0 = checkResult
		CheckEqual(player[currentPlayer].state, Player_State_GotHit)
		temp0 |= checkResult

		if temp0 == false
			// All checks passed, see if the player is touching the ring

			BoxCollisionTest(C_TOUCH, object.entityPos, 0, 0, 32, 32, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				// Player is touching ring - collect it

				// Turn this object into a sparkle
				object.type = TypeName[Blank Object]
				PlaySfx(SfxName[Red Ring], false)
				// Set this object to the same drawOrder as the player
				object.drawOrder = player[currentPlayer].currentPlane

				// Add it to the player's red ring count
				coinCount++		
			end if
		end if
end event

event ObjectDraw
	// All rings use the same frame
	// (Animation is handled by Stage Setup object)
	DrawSprite(ringFrame)
end event


event ObjectStartup
	LoadSpriteSheet("Global/RedRing.gif")

	// Set each ring's draw order to 4
	foreach (TypeName[Ring], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].drawOrder = 4
	next

	// Ring frames
	SpriteFrame(0, 0, 32, 32, 0, 0)
	SpriteFrame(0, 0, 32, 32, 0, 32)
	SpriteFrame(0, 0, 32, 32, 0, 64)
	SpriteFrame(0, 0, 32, 32, 0, 96)
	SpriteFrame(0, 0, 32, 32, 0, 128)
	SpriteFrame(0, 0, 32, 32, 0, 160)
	SpriteFrame(0, 0, 32, 32, 0, 192)
	SpriteFrame(0, 0, 32, 32, 0, 224)

	// Add the Ring to the debug mode object list	
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
			
		case 0 // type
			checkResult = object.propertyValue
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
			
		case 0 // type
			object.propertyValue = editor.variableValue
			break
			
		end switch
	end if
end event


event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-8, -8, 16, 16, 1, 1)

	AddEditorVariable("type")
	SetActiveVariable("type")
	AddEnumVariable("Normal", 0)
	//AddEnumVariable("Not required by Sonic for perfect bonus", 1) // The score tally system seems to be a bit broken, so while it looks like this is how it was _supposed_ to be, this is effectively useless
	AddEnumVariable("Not required by all characters for perfect bonus", 2)
end event
